{"mappings":"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","sources":["<anon>","src/js/fetchCountries.js","node_modules/lodash.debounce/index.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    var $faa88de4f0afd1d0$exports = {};\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ /** Used as the `TypeError` message for \"Functions\" methods. */ var $faa88de4f0afd1d0$var$FUNC_ERROR_TEXT = 'Expected a function';\n/** Used as references for various `Number` constants. */ var $faa88de4f0afd1d0$var$NAN = 0 / 0;\n/** `Object#toString` result references. */ var $faa88de4f0afd1d0$var$symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */ var $faa88de4f0afd1d0$var$reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */ var $faa88de4f0afd1d0$var$reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */ var $faa88de4f0afd1d0$var$reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */ var $faa88de4f0afd1d0$var$reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */ var $faa88de4f0afd1d0$var$freeParseInt = parseInt;\n/** Detect free variable `global` from Node.js. */ var $faa88de4f0afd1d0$var$freeGlobal = typeof $parcel$global == 'object' && $parcel$global && $parcel$global.Object === Object && $parcel$global;\n/** Detect free variable `self`. */ var $faa88de4f0afd1d0$var$freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */ var $faa88de4f0afd1d0$var$root = $faa88de4f0afd1d0$var$freeGlobal || $faa88de4f0afd1d0$var$freeSelf || Function('return this')();\n/** Used for built-in method references. */ var $faa88de4f0afd1d0$var$objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */ var $faa88de4f0afd1d0$var$objectToString = $faa88de4f0afd1d0$var$objectProto.toString;\n/* Built-in method references for those with the same name as other `lodash` methods. */ var $faa88de4f0afd1d0$var$nativeMax = Math.max, $faa88de4f0afd1d0$var$nativeMin = Math.min;\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */ var $faa88de4f0afd1d0$var$now = function() {\n    return $faa88de4f0afd1d0$var$root.Date.now();\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */ function $faa88de4f0afd1d0$var$debounce(func, wait, options) {\n    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;\n    if (typeof func != 'function') throw new TypeError($faa88de4f0afd1d0$var$FUNC_ERROR_TEXT);\n    wait = $faa88de4f0afd1d0$var$toNumber(wait) || 0;\n    if ($faa88de4f0afd1d0$var$isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? $faa88de4f0afd1d0$var$nativeMax($faa88de4f0afd1d0$var$toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n    }\n    function invokeFunc(time) {\n        var args = lastArgs, thisArg = lastThis;\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n    }\n    function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n    }\n    function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result = wait - timeSinceLastCall;\n        return maxing ? $faa88de4f0afd1d0$var$nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n    }\n    function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n    }\n    function timerExpired() {\n        var time = $faa88de4f0afd1d0$var$now();\n        if (shouldInvoke(time)) return trailingEdge(time);\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n    }\n    function trailingEdge(time) {\n        timerId = undefined;\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) return invokeFunc(time);\n        lastArgs = lastThis = undefined;\n        return result;\n    }\n    function cancel() {\n        if (timerId !== undefined) clearTimeout(timerId);\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n    }\n    function flush() {\n        return timerId === undefined ? result : trailingEdge($faa88de4f0afd1d0$var$now());\n    }\n    function debounced() {\n        var time = $faa88de4f0afd1d0$var$now(), isInvoking = shouldInvoke(time);\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n            if (timerId === undefined) return leadingEdge(lastCallTime);\n            if (maxing) {\n                // Handle invocations in a tight loop.\n                timerId = setTimeout(timerExpired, wait);\n                return invokeFunc(lastCallTime);\n            }\n        }\n        if (timerId === undefined) timerId = setTimeout(timerExpired, wait);\n        return result;\n    }\n    debounced.cancel = cancel;\n    debounced.flush = flush;\n    return debounced;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */ function $faa88de4f0afd1d0$var$isObject(value) {\n    var type = typeof value;\n    return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */ function $faa88de4f0afd1d0$var$isObjectLike(value) {\n    return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */ function $faa88de4f0afd1d0$var$isSymbol(value) {\n    return typeof value == 'symbol' || $faa88de4f0afd1d0$var$isObjectLike(value) && $faa88de4f0afd1d0$var$objectToString.call(value) == $faa88de4f0afd1d0$var$symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */ function $faa88de4f0afd1d0$var$toNumber(value) {\n    if (typeof value == 'number') return value;\n    if ($faa88de4f0afd1d0$var$isSymbol(value)) return $faa88de4f0afd1d0$var$NAN;\n    if ($faa88de4f0afd1d0$var$isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = $faa88de4f0afd1d0$var$isObject(other) ? other + '' : other;\n    }\n    if (typeof value != 'string') return value === 0 ? value : +value;\n    value = value.replace($faa88de4f0afd1d0$var$reTrim, '');\n    var isBinary = $faa88de4f0afd1d0$var$reIsBinary.test(value);\n    return isBinary || $faa88de4f0afd1d0$var$reIsOctal.test(value) ? $faa88de4f0afd1d0$var$freeParseInt(value.slice(2), isBinary ? 2 : 8) : $faa88de4f0afd1d0$var$reIsBadHex.test(value) ? $faa88de4f0afd1d0$var$NAN : +value;\n}\n$faa88de4f0afd1d0$exports = $faa88de4f0afd1d0$var$debounce;\n\n\nconst $6385465103c17499$var$input = document.querySelector('#input');\nconst $6385465103c17499$var$div = document.querySelector('#countryDiv');\nlet $6385465103c17499$var$countries = [];\nfetch(\"https://restcountries.com/v3.1/all\").then((res)=>{\n    return res.json();\n}).then((data)=>$6385465103c17499$var$countries = data);\nfetch(\"https://restcountries.com/v3.1/all\").then((res)=>{\n    return res.json();\n}).then((data)=>console.log(data));\nfunction $6385465103c17499$var$countryFunction(array, inputValue) {\n    let countryName;\n    let objectName;\n    let html;\n    let dependense;\n    for(let i = 0; i < array.length; i++)if (array[i].name.common.toLowerCase() === inputValue.toLowerCase()) {\n        countryName = array[i].name.common;\n        objectName = array[i];\n        if (objectName.independent === true) dependense = 'Independent country';\n        else dependense = 'Dependent country';\n        const currencyCode = Object.keys(objectName.currencies || {})[0];\n        const currency = objectName.currencies?.[currencyCode] || {};\n        const languageValues = Object.values(objectName.languages);\n        html = `\n                <h2 class='countryName'>Name of the country: ${countryName}</h2>\n                <p>Oficial name: ${objectName.name.official}</p>\n                <p>Area: ${objectName.area}km\\xb2</p>\n                <p>Capital city: ${objectName.capital || 'No capital'}</p>\n                <p>Continent: ${objectName.continents}</p>\n                <p>Population: ${objectName.population} people</p>\n                <p>Languages: ${languageValues}</p>\n                <p>Borders: ${objectName.borders || 'No borders'}</p>\n                <p>Dependense: ${dependense}</p>\n                <div>\n                    <p>Currency code: ${currencyCode}</p>\n                    <p>Currency symbol: ${currency.symbol || 'N/A'}</p>\n                    <p>Currency name: ${currency.name || 'N/A'}</p>\n                </div>\n                <img src='${objectName.flags.png}' alt=\"Flag of ${countryName}\">\n                <p>Car side: ${objectName.car.side}</p>\n                <p>Region: ${objectName.region}</p>\n                <p>Subregion: ${objectName.subregion}</p>\n                <p>Timezones: ${objectName.timezones}</p>\n                <p>Status: ${objectName.status}</p>\n                <p>Start of a week: ${objectName.startOfWeek}</p>\n                <p>${countryName} on a map: ${objectName.maps.googleMaps}</p>`;\n        break;\n    }\n    return html;\n}\n$6385465103c17499$var$input.addEventListener('input', (0, (/*@__PURE__*/$parcel$interopDefault($faa88de4f0afd1d0$exports)))((e)=>{\n    const inputText = e.target.value.trim();\n    if (inputText.length > 0) {\n        if ($6385465103c17499$var$countryFunction($6385465103c17499$var$countries, inputText) === undefined) $6385465103c17499$var$div.innerHTML = 'Country that you entered is undefined. Try again';\n        else $6385465103c17499$var$div.innerHTML = $6385465103c17499$var$countryFunction($6385465103c17499$var$countries, inputText);\n    } else $6385465103c17499$var$div.innerHTML = 'Enter a country';\n}, 500));\n\n\n//# sourceMappingURL=goit-js-hw-12-countries.90d21b4f.js.map\n","import debounce from 'lodash.debounce';\r\nconst input = document.querySelector('#input')\r\nconst div = document.querySelector('#countryDiv')\r\n\r\nlet countries = []\r\n\r\nfetch(\"https://restcountries.com/v3.1/all\")\r\n.then((res) => {return res.json()})\r\n.then((data) => countries = data)\r\n\r\nfetch(\"https://restcountries.com/v3.1/all\")\r\n.then((res) => {return res.json()})\r\n.then((data) => console.log(data))\r\n\r\nfunction countryFunction(array, inputValue){\r\n    let countryName;\r\n    let objectName;\r\n    let html;\r\n    let dependense;\r\n    for (let i = 0; i < array.length; i++){\r\n        if (array[i].name.common.toLowerCase() === inputValue.toLowerCase()){\r\n            countryName = array[i].name.common\r\n            objectName = array[i]\r\n            if (objectName.independent === true){\r\n                dependense = 'Independent country'\r\n            } else {\r\n                dependense = 'Dependent country'\r\n            }\r\n            const currencyCode = Object.keys(objectName.currencies || {})[0];\r\n            const currency = objectName.currencies?.[currencyCode] || {};\r\n            const languageValues = Object.values(objectName.languages);\r\n            html =  `\r\n                <h2 class='countryName'>Name of the country: ${countryName}</h2>\r\n                <p>Oficial name: ${objectName.name.official}</p>\r\n                <p>Area: ${objectName.area}km²</p>\r\n                <p>Capital city: ${objectName.capital || 'No capital'}</p>\r\n                <p>Continent: ${objectName.continents}</p>\r\n                <p>Population: ${objectName.population} people</p>\r\n                <p>Languages: ${languageValues}</p>\r\n                <p>Borders: ${objectName.borders || 'No borders'}</p>\r\n                <p>Dependense: ${dependense}</p>\r\n                <div>\r\n                    <p>Currency code: ${currencyCode}</p>\r\n                    <p>Currency symbol: ${currency.symbol || 'N/A'}</p>\r\n                    <p>Currency name: ${currency.name || 'N/A'}</p>\r\n                </div>\r\n                <img src='${objectName.flags.png}' alt=\"Flag of ${countryName}\">\r\n                <p>Car side: ${objectName.car.side}</p>\r\n                <p>Region: ${objectName.region}</p>\r\n                <p>Subregion: ${objectName.subregion}</p>\r\n                <p>Timezones: ${objectName.timezones}</p>\r\n                <p>Status: ${objectName.status}</p>\r\n                <p>Start of a week: ${objectName.startOfWeek}</p>\r\n                <p>${countryName} on a map: ${objectName.maps.googleMaps}</p>`\r\n                break\r\n        }     \r\n    }\r\n    return html;\r\n}\r\n\r\ninput.addEventListener('input', debounce((e) => {\r\n    const inputText = e.target.value.trim()\r\n    if (inputText.length > 0){\r\n        if (countryFunction(countries, inputText) === undefined){\r\n            div.innerHTML = 'Country that you entered is undefined. Try again'\r\n        } else {\r\n            div.innerHTML = countryFunction(countries, inputText)\r\n        }\r\n    } else {\r\n        div.innerHTML = 'Enter a country';\r\n    }\r\n}, 500))","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n"],"names":["a","$parcel$global","globalThis","$faa88de4f0afd1d0$exports","$faa88de4f0afd1d0$var$NAN","$faa88de4f0afd1d0$var$reTrim","$faa88de4f0afd1d0$var$reIsBadHex","$faa88de4f0afd1d0$var$reIsBinary","$faa88de4f0afd1d0$var$reIsOctal","$faa88de4f0afd1d0$var$freeParseInt","parseInt","$faa88de4f0afd1d0$var$freeGlobal","Object","$faa88de4f0afd1d0$var$freeSelf","self","$faa88de4f0afd1d0$var$root","Function","$faa88de4f0afd1d0$var$objectToString","$faa88de4f0afd1d0$var$objectProto","prototype","toString","$faa88de4f0afd1d0$var$nativeMax","Math","max","$faa88de4f0afd1d0$var$nativeMin","min","$faa88de4f0afd1d0$var$now","Date","now","$faa88de4f0afd1d0$var$isObject","value","type","$faa88de4f0afd1d0$var$toNumber","$faa88de4f0afd1d0$var$isObjectLike","call","other","valueOf","replace","isBinary","test","slice","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","timerExpired","trailingEdge","setTimeout","debounced","isInvoking","arguments","cancel","clearTimeout","flush","$6385465103c17499$var$input","document","querySelector","$6385465103c17499$var$div","$6385465103c17499$var$countries","$6385465103c17499$var$countryFunction","array","inputValue","countryName","objectName","html","dependense","i","length","name","common","toLowerCase","independent","currencyCode","keys","currencies","currency","languageValues","values","languages","official","area","capital","continents","population","borders","symbol","flags","png","car","side","region","subregion","timezones","status","startOfWeek","maps","googleMaps","fetch","then","res","json","data","console","log","addEventListener","__esModule","default","e","inputText","target","trim","innerHTML"],"version":3,"file":"goit-js-hw-12-countries.90d21b4f.js.map"}